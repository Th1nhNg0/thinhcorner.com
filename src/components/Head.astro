---
import { SITE, GOOGLE_ANALYTICS_ID, GOOGLE_ANALYTICS_URL } from "@/consts";
import "@/styles/global.css";

interface Props {
  title: string;
  description: string;
  image?: string;
  // SEO extras
  type?: "website" | "article";
  robots?: string;
  locale?: string; // e.g., en_US, vi_VN
  siteName?: string;
  prevUrl?: string | URL;
  nextUrl?: string | URL;
  author?: string;
  publishedTime?: string; // ISO
  modifiedTime?: string; // ISO
  imageAlt?: string;
  structuredData?: Record<string, any> | Array<Record<string, any>>;
}
const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
  title,
  description,
  image = "/og.png",
  type = "website",
  robots,
  locale,
  siteName = SITE.title,
  prevUrl,
  nextUrl,
  author,
  publishedTime,
  modifiedTime,
  imageAlt,
  structuredData,
} = Astro.props;
---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <link rel="icon" type="image/png" href="/favicon.png" />
  <meta name="generator" content={Astro.generator} />

  <!-- Canonical URL -->
  <link rel="canonical" href={canonicalURL} />

  <!-- Primary Meta Tags -->
  <title>{title}</title>
  <meta name="title" content={title} />
  <meta name="description" content={description} />
  {author && <meta name="author" content={author} />}
  {robots && <meta name="robots" content={robots} />}

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content={type} />
  <meta property="og:url" content={canonicalURL} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={new URL(image, Astro.site)} />
  {imageAlt && <meta property="og:image:alt" content={imageAlt} />}
  <meta property="og:site_name" content={siteName} />
  {locale && <meta property="og:locale" content={locale} />}
  {
    type === "article" && publishedTime && (
      <meta property="article:published_time" content={publishedTime} />
    )
  }
  {
    type === "article" && modifiedTime && (
      <meta property="article:modified_time" content={modifiedTime} />
    )
  }

  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={canonicalURL} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content={new URL(image, Astro.site)} />
  {imageAlt && <meta name="twitter:image:alt" content={imageAlt} />}
  {author && <meta name="twitter:label1" content="Author" />}
  {author && <meta name="twitter:data1" content={author} />}

  <link
    rel="alternate"
    type="application/rss+xml"
    title={SITE.title}
    href={new URL("rss.xml", Astro.site)}
  />
  <link rel="sitemap" href="/sitemap-index.xml" />

  {/* Pagination relationships */}
  {prevUrl && <link rel="prev" href={prevUrl} />}
  {nextUrl && <link rel="next" href={nextUrl} />}

  {/* Structured Data */}
  {
    structuredData && (
      <script
        type="application/ld+json"
        set:html={JSON.stringify(structuredData)}
      />
    )
  }

  {/* Google Analytics (gtag) */}
  {
    import.meta.env.PROD && (
      <>
        <script type="text/partytown" async src={GOOGLE_ANALYTICS_URL} />
        <script
          type="text/partytown"
          set:html={`
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', '${GOOGLE_ANALYTICS_ID}');
      `}
        />
      </>
    )
  }
</head>
