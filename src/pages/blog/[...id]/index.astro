---
import Container from "@/components/Container.astro";
import Layout from "@/layouts/Layout.astro";
import type { CollectionEntry } from "astro:content";
import { getCollection, render } from "astro:content";
import { format } from "date-fns";
import "katex/dist/katex.min.css";
import EditOnGithub from "../../../components/EditOnGithub.astro";

export async function getStaticPaths() {
  const posts = (await getCollection("blog")).sort(
    (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
  );
  return posts.map((post) => ({
    params: { id: post.id },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);

function getNextPost() {
  let postIndex;
  for (const post of posts) {
    if (post.id === Astro.params.id) {
      postIndex = posts.indexOf(post);
      return posts[postIndex + 1];
    }
  }
}

function getPrevPost() {
  let postIndex;
  for (const post of posts) {
    if (post.id === Astro.params.id) {
      postIndex = posts.indexOf(post);
      return posts[postIndex - 1];
    }
  }
}

const nextPost = getNextPost();
const prevPost = getPrevPost();

const post = Astro.props;
const { Content, remarkPluginFrontmatter } = await render(post);

let slug = Array.isArray(Astro.params.id)
  ? Astro.params.id[0]
  : Astro.params.id;
---

<Layout
  title={post.data.title}
  description={post.data.description}
  image={`/blog/${post.id}/og.png`}
>
  <Container>
    {
      post.data.draft && (
        <div class="mb-8 rounded-lg border border-yellow-500/30 bg-yellow-500/10 px-4 py-3 text-yellow-500">
          <p class="text-sm font-medium">
            ⚠️ This is a draft post. It may be incomplete or contain incorrect
            information.
          </p>
        </div>
      )
    }
    <div class="mb-10 space-y-1">
      <h1 class="text-5xl font-semibold text-white font-genos">
        {post.data.title}
      </h1>
      <div class="flex flex-col md:flex-row gap-2 md:items-center">
        <div class="flex items-center gap-1.5">
          <time
            datetime={post.data.date.toISOString()}
            title={post.data.date.toISOString()}
            class="font-base text-sm"
          >
            {format(new Date(post.data.date), "dd MMMM yyyy")}
          </time>
          &bull;
          {
            post.body && (
              <div class="font-base text-sm">
                {remarkPluginFrontmatter.minutesRead}
              </div>
            )
          }
        </div>
        <!-- vercel is not fully clone the git so disabled for now -->
        <!-- <div>
          {
            remarkPluginFrontmatter.lastModified && (
              <span class="inline-flex items-center rounded-md bg-gray-800 px-2 py-1 text-xs font-medium text-gray-300">
                Updated:{" "}
                {format(
                  new Date(remarkPluginFrontmatter.lastModified),
                  "dd MMM yyyy"
                )}
              </span>
            )
          }
        </div> -->
      </div>
    </div>
    <article
      class="prose prose-img:mx-auto max-w-none prose-invert prose-a:text-yellow-500 prose-table:my-auto"
    >
      <Content />
    </article>

    <EditOnGithub slug={slug} />

    <nav class="my-8 flex flex-col gap-4 border-t border-zinc-700/50 pt-8">
      {
        prevPost && (
          <a
            href={`/blog/${prevPost.id}`}
            class="group relative  border border-zinc-700/50 p-4 transition-colors hover:border-gray-600"
          >
            <div class="mb-2 text-sm text-gray-400">← Previous Article</div>
            <div class="line-clamp-2 font-medium text-gray-100 group-hover:text-white">
              {prevPost.data.title}
            </div>
          </a>
        )
      }

      {
        nextPost && (
          <a
            href={`/blog/${nextPost.id}`}
            class="group relative border border-zinc-700/50 p-4 transition-colors hover:border-gray-600"
          >
            <div class="mb-2 text-sm text-gray-400">Next Article →</div>
            <div class="line-clamp-2 font-medium text-gray-100 group-hover:text-white">
              {nextPost.data.title}
            </div>
          </a>
        )
      }
    </nav>
  </Container>
</Layout>
